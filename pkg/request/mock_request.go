// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/waynewu411/blocktasks/pkg/request (interfaces: Request)
//
// Generated by this command:
//
//	mockgen -destination=mock_request.go -package=request github.com/waynewu411/blocktasks/pkg/request Request
//

// Package request is a generated GoMock package.
package request

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRequest is a mock of Request interface.
type MockRequest struct {
	ctrl     *gomock.Controller
	recorder *MockRequestMockRecorder
	isgomock struct{}
}

// MockRequestMockRecorder is the mock recorder for MockRequest.
type MockRequestMockRecorder struct {
	mock *MockRequest
}

// NewMockRequest creates a new mock instance.
func NewMockRequest(ctrl *gomock.Controller) *MockRequest {
	mock := &MockRequest{ctrl: ctrl}
	mock.recorder = &MockRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequest) EXPECT() *MockRequestMockRecorder {
	return m.recorder
}

// MakeRequest mocks base method.
func (m *MockRequest) MakeRequest(method, apiUrl string, queryParams map[string]string, reqBody string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeRequest", method, apiUrl, queryParams, reqBody)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakeRequest indicates an expected call of MakeRequest.
func (mr *MockRequestMockRecorder) MakeRequest(method, apiUrl, queryParams, reqBody any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeRequest", reflect.TypeOf((*MockRequest)(nil).MakeRequest), method, apiUrl, queryParams, reqBody)
}
